syntax = "proto3";

package pogoprotos.map.fort;

import "pogoprotos/enums/pokemon_id.proto";
import "pogoprotos/enums/team_color.proto";
import "pogoprotos/map/fort/fort_type.proto";
import "pogoprotos/map/fort/fort_sponsor.proto";
import "pogoprotos/map/fort/fort_rendering_type.proto";
import "pogoprotos/map/fort/fort_lure_info.proto";

message FortData {
  string id = 1;
  int64 last_modified_timestamp_ms = 2;
  double latitude = 3;
  double longitude = 4;
  bool enabled = 8;
  pogoprotos.map.fort.FortType type = 9;
  //// Fields related to gyms only
  // Team that owns the gym
  pogoprotos.enums.TeamColor owned_by_team = 5;
  // Highest CP Pokemon at the gym
  pogoprotos.enums.PokemonId guard_pokemon_id = 6;
  int32 guard_pokemon_cp = 7;
  // Prestigate / experience of the gym
  int64 gym_points = 10;
  // Whether someone is battling at the gym currently
  bool is_in_battle = 11;
  //// Fields related to pokestops only
  // Timestamp when the pokestop can be activated again to get items / xp
  int64 cooldown_complete_timestamp_ms = 14;
  pogoprotos.map.fort.FortSponsor sponsor = 15;
  pogoprotos.map.fort.FortRenderingType rendering_type = 16;
  // Might represent the type of item applied to the pokestop, right now only lures can be applied
  bytes active_fort_modifier = 12;
  pogoprotos.map.fort.FortLureInfo lure_info = 13;
}

